{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","post","req","res","newFoodTruck","name","body","foodtype","avgcost","geometry","coordinates","save","err","send","json","message","get","find","foodtrucks","findById","params","id","foodtruck","put","delete","remove","_id","review","newReview","title","text","reviews","push"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from 'mongoose'\nimport { Router } from 'express'\nimport Foodtruck from '../model/foodtruck'\nimport Review from '../model/review'\nimport bodyParsers from 'body-parser'\n\nimport { authenticate } from '../middleware/authMiddleware'\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // '/v1/foodtruck/add' - POST add a foodtruck\n  api.post('/add', authenticate, (req, res) => {\n    let newFoodTruck = new Foodtruck();\n    newFoodTruck.name = req.body.name;\n    newFoodTruck.foodtype = req.body.foodtype;\n    newFoodTruck.avgcost = req.body.avgcost;\n    newFoodTruck.geometry.coordinates = req.body.geometry.coordinates;\n\n    newFoodTruck.save(err => {\n      if (err) {\n        res.send(err);\n      }\n      res.json({ message: 'Foodtruck saved succesfully' });\n    });\n  });\n\n  // '/v1/foodtruck' - GET all foodtrucks\n  api.get('/', (req, res) => {\n    Foodtruck.find({}, (err, foodtrucks) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtrucks);\n    });\n  });\n\n  // '/v1/foodtruck/:id' - GET a specific foodtruck\n  api.get('/:id', (req, res) => {\n    Foodtruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtruck);\n    });\n  });\n\n  // '/v1/foodtruck/:id' - PUT update an existing record\n  api.put('/:id', authenticate, (req, res) => {\n    Foodtruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      foodtruck.name = req.body.name;\n      foodtruck.foodtype = req.body.foodtype;\n      foodtruck.avgcost = req.body.avgcost;\n      foodtruck.geometry.coordinates = req.body.geometry.coordinates;\n      foodtruck.save(err => {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: \"Foodtruck info updated\" });\n      });\n    });\n  });\n\n  // '/v1/foodtruck/:id' - DELETE remove a foodtruck\n  api.delete('/:id', authenticate, (req, res) => {\n    Foodtruck.remove({\n      _id: req.params.id\n    }, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      Review.remove({\n        foodtruck: req.params.id\n      }, (err, review) => {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: \"Foodtruck removed \"});\n      });\n    });\n  });\n\n  // '/v1/foodtruck/reviews/add/:id' - POST a review for a foodtruck\n  api.post('/reviews/add/:id', authenticate, (req, res) => {\n    Foodtruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      let newReview = new Review();\n\n      newReview.title = req.body.title;\n      newReview.text = req.body.text;\n      newReview.foodtruck = foodtruck._id\n      newReview.save((err, review) => {\n        if (err) {\n          res.send(err);\n        }\n        foodtruck.reviews.push(newReview);\n        foodtruck.save(err => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({ message: \"Foodtruck review saved \"});\n        });\n      });\n    });\n  });\n\n  // '/v1/foodtruck/reviews/:id' - GET reviews for specific foodtruck\n  api.get('/reviews/:id', (req, res) => {\n    Review.find({foodtruck: req.params.id}, (err, reviews) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(reviews);\n    });\n  });\n\n  return api\n}\n"]}